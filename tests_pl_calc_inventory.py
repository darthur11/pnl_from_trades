from datetime import datetime

import pandas as pd
import pytest

from .constants import BASE_COLUMNS
from .pl_calculator import PLCalculator


@pytest.fixture
def input_inventory_change():
    input = [
        (
            "USD/KZT",
            "USD",
            "KZT",
            1,
            1,
            450,
            datetime(2020, 2, 1, 0, 0),
            1,
            1,
            None,
            0,
            0,
        ),
        (
            "USD/KZT",
            "USD",
            "KZT",
            1,
            100,
            450,
            datetime(2020, 2, 2, 0, 0),
            100,
            101,
            1,
            0,
            0,
        ),
        (
            "USD/PHP",
            "USD",
            "PHP",
            1,
            50,
            66,
            datetime(2020, 2, 2, 0, 0),
            50,
            50,
            None,
            0,
            0,
        ),
        (
            "USD/KZT",
            "USD",
            "KZT",
            -1,
            201,
            450,
            datetime(2020, 2, 3, 0, 0),
            -201,
            -100,
            101,
            101.0,
            0,
        ),
        (
            "USD/PHP",
            "USD",
            "PHP",
            -1,
            150,
            66,
            datetime(2020, 2, 3, 0, 0),
            -150,
            -100,
            50,
            50,
            0,
        ),
        (
            "USD/KZT",
            "USD",
            "KZT",
            1,
            302,
            500,
            datetime(2020, 2, 4, 0, 0),
            302,
            202,
            -100,
            100,
            0,
        ),
        (
            "USD/PHP",
            "USD",
            "PHP",
            1,
            350,
            60,
            datetime(2020, 2, 4, 0, 0),
            350,
            250,
            -100,
            100,
            0,
        ),
        (
            "USD/KZT",
            "USD",
            "KZT",
            -1,
            2,
            550,
            datetime(2020, 2, 5, 0, 0),
            -2,
            200,
            202,
            2,
            1,
        ),
    ]
    new_columns = [
        "amount_signed",
        "running_balance",
        "lag_running_balance",
        "amount_liquidated",
        "flag_liquidation",
    ]
    return pd.DataFrame(input, columns=BASE_COLUMNS + new_columns)


def test_inventory_metrics(input_inventory_change: pd.DataFrame):
    """Should correctly calculate running inventory"""
    pl_calc = PLCalculator(input_inventory_change)
    new_columns = [
        "amount_signed",
        "running_balance",
        "lag_running_balance",
        "amount_liquidated",
        "flag_liquidation",
        "inventory_change",
        "running_inventory",
        "inventory_cost",
    ]
    expected_data = pd.DataFrame(
        [
            (
                "USD/KZT",
                "USD",
                "KZT",
                1,
                1,
                450,
                datetime(2020, 2, 1, 0, 0),
                1,
                1,
                None,
                0,
                0,
                450.0,
                450.0,
                450.0,
            ),
            (
                "USD/KZT",
                "USD",
                "KZT",
                1,
                100,
                450,
                datetime(2020, 2, 2, 0, 0),
                100,
                101,
                1,
                0,
                0,
                45000.0,
                45450.0,
                450.0,
            ),
            (
                "USD/PHP",
                "USD",
                "PHP",
                1,
                50,
                66,
                datetime(2020, 2, 2, 0, 0),
                50,
                50,
                None,
                0,
                0,
                3300.0,
                3300.0,
                66.0,
            ),
            (
                "USD/KZT",
                "USD",
                "KZT",
                -1,
                201,
                450,
                datetime(2020, 2, 3, 0, 0),
                -201,
                -100,
                101,
                101.0,
                0,
                -90450,
                -45000,
                450.0,
            ),
            (
                "USD/PHP",
                "USD",
                "PHP",
                -1,
                150,
                66,
                datetime(2020, 2, 3, 0, 0),
                -150,
                -100,
                50,
                50,
                0,
                -9900,
                -6600,
                66.0,
            ),
            (
                "USD/KZT",
                "USD",
                "KZT",
                1,
                302,
                500,
                datetime(2020, 2, 4, 0, 0),
                302,
                202,
                -100,
                100,
                0,
                146000,
                101000,
                500.0,
            ),
            (
                "USD/PHP",
                "USD",
                "PHP",
                1,
                350,
                60,
                datetime(2020, 2, 4, 0, 0),
                350,
                250,
                -100,
                100,
                0,
                21600,
                15000,
                60,
            ),
            (
                "USD/KZT",
                "USD",
                "KZT",
                -1,
                2,
                550,
                datetime(2020, 2, 5, 0, 0),
                -2,
                200,
                202,
                2,
                1,
                -1000,
                100000,
                500,
            ),
        ],
        columns=BASE_COLUMNS + new_columns,
    )
    pd.testing.assert_frame_equal(pl_calc.inventory_metrics(), expected_data)
